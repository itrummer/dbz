[{"task_idx": 0, "task": {"type": "generate", "task_id": "load", "context": [], "template": "load_data.py", "substitutions": {"<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -5.217989921569824}, {"task_idx": 1, "task": {"type": "generate", "task_id": "store", "context": [], "template": "store_data.py", "substitutions": {"<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -3.6085617542266846}, {"task_idx": 2, "task": {"type": "generate", "task_id": "normalize", "context": [], "template": "normalize.py", "substitutions": {"<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -6.876896142959595}, {"task_idx": 3, "task": {"type": "generate", "task_id": "nr_rows", "context": [], "template": "nr_rows.py", "substitutions": {"<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -6.030584812164307}, {"task_idx": 4, "task": {"type": "generate", "task_id": "multiplication", "context": [], "template": "binary_expression.py", "substitutions": {"<binary_op>": "multiplication", "<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -9.277743816375732}, {"task_idx": 5, "task": {"type": "generate", "task_id": "get", "context": [], "template": "get.py", "substitutions": {"<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -5.427215337753296}, {"task_idx": 6, "task": {"type": "generate", "task_id": "fill_column", "context": [], "template": "fill_column.py", "substitutions": {"<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -8.015620708465576}, {"task_idx": 7, "task": {"type": "generate", "task_id": "map", "context": [], "template": "map.py", "substitutions": {"<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -8.001813411712646}, {"task_idx": 8, "task": {"type": "check", "queries": ["select * from lineitem", "select l_shipinstruct like '%BACK%' from lineitem", "select cast(l_extendedprice as int) from lineitem"]}, "temperature": 0, "total_s": -5.821815729141235}, {"task_idx": 9, "task": {"type": "generate", "task_id": "addition", "context": [], "template": "binary_expression.py", "substitutions": {"<binary_op>": "addition", "<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -8.389271020889282}, {"task_idx": 10, "task": {"type": "check", "queries": ["select l_extendedprice + 0.1 from lineitem", "select l_extendedprice * 10 from lineitem", "select l_extendedprice + NULL from lineitem"]}, "temperature": 0, "total_s": -5.345631122589111}, {"task_idx": 11, "task": {"type": "generate", "task_id": "subtraction", "context": [], "template": "binary_expression.py", "substitutions": {"<binary_op>": "subtraction", "<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -3.994227886199951}, {"task_idx": 12, "task": {"type": "check", "queries": ["select l_extendedprice - 0.1 from lineitem"]}, "temperature": 0, "total_s": -1.8230268955230713}, {"task_idx": 13, "task": {"type": "generate", "task_id": "division", "context": [], "template": "binary_expression.py", "substitutions": {"<binary_op>": "division", "<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -6.281692981719971}, {"task_idx": 14, "task": {"type": "check", "queries": ["select l_extendedprice / 0.1 from lineitem"]}, "temperature": 0, "total_s": -1.787548303604126}, {"task_idx": 15, "task": {"type": "generate", "task_id": "to_float", "context": [], "template": "cast.py", "substitutions": {"<ToType>": "float", "<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -4.541460275650024}, {"task_idx": 16, "task": {"type": "check", "queries": ["select cast(l_extendedprice as float) from lineitem"]}, "temperature": 0, "total_s": -1.8549246788024902}, {"task_idx": 17, "task": {"type": "generate", "task_id": "to_string", "context": [], "template": "cast.py", "substitutions": {"<ToType>": "varchar", "<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -3.854759931564331}, {"task_idx": 18, "task": {"type": "check", "queries": ["select cast(l_extendedprice as varchar(100)) from lineitem"]}, "temperature": 0, "total_s": -1.809354305267334}, {"task_idx": 19, "task": {"type": "generate", "task_id": "substring", "context": [], "template": "substring.py", "substitutions": {"<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -4.067834138870239}, {"task_idx": 20, "task": {"type": "check", "queries": ["select substring(l_comment, 1, 3) from lineitem"]}, "temperature": 0, "total_s": -1.7534511089324951}, {"task_idx": 21, "task": {"type": "generate", "task_id": "filter", "context": [], "template": "filter.py", "substitutions": {"<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -3.677255630493164}, {"task_idx": 22, "task": {"type": "generate", "task_id": "less_than", "context": [], "template": "binary_cmp.py", "substitutions": {"<binary_op>": "less_than", "<short_op>": "<", "<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -3.7218852043151855}, {"task_idx": 23, "task": {"type": "check", "queries": ["select * from lineitem where l_extendedprice < 13309.60"]}, "temperature": 0, "total_s": -1.9459166526794434}, {"task_idx": 24, "task": {"type": "generate", "task_id": "greater_than", "context": [], "template": "binary_cmp.py", "substitutions": {"<binary_op>": "greater_than", "<short_op>": ">", "<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -3.887756109237671}, {"task_idx": 25, "task": {"type": "check", "queries": ["select * from lineitem where l_extendedprice > 13309.60"]}, "temperature": 0, "total_s": -2.1162338256835938}, {"task_idx": 26, "task": {"type": "generate", "task_id": "equal_to", "context": [], "template": "binary_cmp.py", "substitutions": {"<binary_op>": "equal", "<short_op>": "=", "<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -4.114404678344727}, {"task_idx": 27, "task": {"type": "check", "queries": ["select * from lineitem where l_extendedprice = 13309.60"]}, "temperature": 0, "total_s": -1.7587785720825195}, {"task_idx": 28, "task": {"type": "generate", "task_id": "not_equal_to", "context": [], "template": "binary_cmp.py", "substitutions": {"<binary_op>": "not_equal", "<short_op>": "<>", "<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -4.100930213928223}, {"task_idx": 29, "task": {"type": "check", "queries": ["select * from lineitem where l_extendedprice <> 13309.60"]}, "temperature": 0, "total_s": -2.1970279216766357}, {"task_idx": 30, "task": {"type": "generate", "task_id": "less_than_or_equal", "context": [], "template": "binary_cmp.py", "substitutions": {"<binary_op>": "less_than_or_equal", "<short_op>": "<=", "<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -4.036792278289795}, {"task_idx": 31, "task": {"type": "check", "queries": ["select * from lineitem where l_extendedprice <= 13309.60"]}, "temperature": 0, "total_s": -1.8970041275024414}, {"task_idx": 32, "task": {"type": "generate", "task_id": "greater_than_or_equal", "context": [], "template": "binary_cmp.py", "substitutions": {"<binary_op>": "greater_than_or_equal", "<short_op>": ">=", "<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -3.8158721923828125}, {"task_idx": 33, "task": {"type": "check", "queries": ["select * from lineitem where l_extendedprice >= 13309.60"]}, "temperature": 0, "total_s": -2.105787992477417}, {"task_idx": 34, "task": {"type": "generate", "task_id": "and", "context": [], "template": "boolean_compound.py", "substitutions": {"<operator>": "and", "<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -8.575313329696655}, {"task_idx": 35, "task": {"type": "check", "queries": ["select * from lineitem where l_extendedprice < 14000 and l_extendedprice > 12000 and l_extendedprice > 13000"]}, "temperature": 0, "total_s": -1.7720091342926025}, {"task_idx": 36, "task": {"type": "generate", "task_id": "or", "context": [], "template": "boolean_compound.py", "substitutions": {"<operator>": "or", "<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -8.189093828201294}, {"task_idx": 37, "task": {"type": "check", "queries": ["select * from lineitem where l_extendedprice < 14000 or l_extendedprice > 12000 or l_extendedprice < 13000"]}, "temperature": 0, "total_s": -1.992957592010498}, {"task_idx": 36, "task": {"type": "generate", "task_id": "or", "context": [], "template": "boolean_compound.py", "substitutions": {"<operator>": "or", "<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0.05, "total_s": -8.417046308517456}, {"task_idx": 37, "task": {"type": "check", "queries": ["select * from lineitem where l_extendedprice < 14000 or l_extendedprice > 12000 or l_extendedprice < 13000"]}, "temperature": 0.05, "total_s": -2.2019846439361572}, {"task_idx": 38, "task": {"type": "generate", "task_id": "not", "context": [], "template": "unary.py", "substitutions": {"<operator>": "logical_not", "<InputDescription>": "with Boolean values", "<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -5.8612682819366455}, {"task_idx": 39, "task": {"type": "check", "queries": ["select * from lineitem where not (l_extendedprice < 13000)"]}, "temperature": 0, "total_s": -2.099236249923706}, {"task_idx": 40, "task": {"type": "generate", "task_id": "rows_to_columns", "context": [], "template": "rows_to_columns.py", "substitutions": {"<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -7.866872072219849}, {"task_idx": 41, "task": {"type": "generate", "task_id": "is_null", "context": [], "template": "is_null.py", "substitutions": {"<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -4.354306221008301}, {"task_idx": 42, "task": {"type": "check", "queries": ["select l_extendedprice is null from lineitem", "select null is true", "select null is false", "select null is null", "select null is not true", "select null is not false", "select null is not null"]}, "temperature": 0, "total_s": -11.868521451950073}, {"task_idx": 43, "task": {"type": "generate", "task_id": "sum", "context": [], "template": "aggregate.py", "substitutions": {"<aggregate>": "sum", "<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -3.465632200241089}, {"task_idx": 44, "task": {"type": "check", "queries": ["select sum(l_extendedprice) from lineitem"]}, "temperature": 0, "total_s": -1.7553002834320068}, {"task_idx": 45, "task": {"type": "generate", "task_id": "min", "context": [], "template": "aggregate.py", "substitutions": {"<aggregate>": "min", "<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -7.605368375778198}, {"task_idx": 46, "task": {"type": "check", "queries": ["select min(l_extendedprice) from lineitem"]}, "temperature": 0, "total_s": -1.7352397441864014}, {"task_idx": 47, "task": {"type": "generate", "task_id": "max", "context": [], "template": "aggregate.py", "substitutions": {"<aggregate>": "max", "<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -7.335416078567505}, {"task_idx": 48, "task": {"type": "check", "queries": ["select max(l_extendedprice) from lineitem"]}, "temperature": 0, "total_s": -1.8142201900482178}, {"task_idx": 49, "task": {"type": "generate", "task_id": "avg", "context": [], "template": "aggregate.py", "substitutions": {"<aggregate>": "avg", "<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -6.054063081741333}, {"task_idx": 50, "task": {"type": "check", "queries": ["select avg(l_extendedprice) from lineitem"]}, "temperature": 0, "total_s": -1.7801074981689453}, {"task_idx": 51, "task": {"type": "generate", "task_id": "count", "context": [], "template": "count.py", "substitutions": {"<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -7.733575820922852}, {"task_idx": 52, "task": {"type": "check", "queries": ["select count(*) from lineitem"]}, "temperature": 0, "total_s": -1.7508108615875244}, {"task_idx": 53, "task": {"type": "generate", "task_id": "case", "context": [], "template": "case.py", "substitutions": {"<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -6.401228189468384}, {"task_idx": 54, "task": {"type": "check", "queries": ["select case when l_extendedprice < 25000 then 1 else 0 end from lineitem"]}, "temperature": 0, "total_s": -1.7698535919189453}, {"task_idx": 55, "task": {"type": "generate", "task_id": "to_tuples", "context": [], "template": "to_tuples.py", "substitutions": {"<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -8.473766088485718}, {"task_idx": 56, "task": {"type": "generate", "task_id": "grouped_sum", "context": [], "template": "grouped_aggregate.py", "substitutions": {"<aggregate>": "sum", "<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -8.749268770217896}, {"task_idx": 57, "task": {"type": "check", "queries": ["select sum(1) from lineitem group by l_shipdate", "select sum(l_extendedprice) from lineitem group by l_shipmode"]}, "temperature": 0, "total_s": -3.545881509780884}, {"task_idx": 58, "task": {"type": "generate", "task_id": "grouped_min", "context": [], "template": "grouped_aggregate.py", "substitutions": {"<aggregate>": "min", "<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -10.286870002746582}, {"task_idx": 59, "task": {"type": "check", "queries": ["select min(l_extendedprice) from lineitem group by l_shipmode"]}, "temperature": 0, "total_s": -1.7757012844085693}, {"task_idx": 60, "task": {"type": "generate", "task_id": "grouped_max", "context": [], "template": "grouped_aggregate.py", "substitutions": {"<aggregate>": "max", "<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -9.484724283218384}, {"task_idx": 61, "task": {"type": "check", "queries": ["select max(l_extendedprice) from lineitem group by l_shipmode"]}, "temperature": 0, "total_s": -1.795203685760498}, {"task_idx": 62, "task": {"type": "generate", "task_id": "grouped_avg", "context": [], "template": "grouped_aggregate.py", "substitutions": {"<aggregate>": "avg", "<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -8.906918287277222}, {"task_idx": 63, "task": {"type": "check", "queries": ["select avg(l_extendedprice) from lineitem group by l_shipmode"]}, "temperature": 0, "total_s": -1.7703590393066406}, {"task_idx": 64, "task": {"type": "generate", "task_id": "grouped_count", "context": [], "template": "grouped_count.py", "substitutions": {"<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -9.589887619018555}, {"task_idx": 65, "task": {"type": "check", "queries": ["select count(*) from lineitem group by l_shipmode"]}, "temperature": 0, "total_s": -1.7588396072387695}, {"task_idx": 66, "task": {"type": "generate", "task_id": "equi_join", "context": [], "template": "hash_join.py", "substitutions": {"<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -9.538701057434082}, {"task_idx": 67, "task": {"type": "check", "queries": ["select * from customer, orders where c_custkey = o_custkey"]}, "temperature": 0, "total_s": -2.0017776489257812}, {"task_idx": 66, "task": {"type": "generate", "task_id": "equi_join", "context": [], "template": "hash_join.py", "substitutions": {"<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0.05, "total_s": -9.834405422210693}, {"task_idx": 67, "task": {"type": "check", "queries": ["select * from customer, orders where c_custkey = o_custkey"]}, "temperature": 0.05, "total_s": -2.0030128955841064}, {"task_idx": 66, "task": {"type": "generate", "task_id": "equi_join", "context": [], "template": "hash_join.py", "substitutions": {"<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0.1, "total_s": -7.533008813858032}, {"task_idx": 67, "task": {"type": "check", "queries": ["select * from customer, orders where c_custkey = o_custkey"]}, "temperature": 0.1, "total_s": -1.914686918258667}, {"task_idx": 66, "task": {"type": "generate", "task_id": "equi_join", "context": [], "template": "hash_join.py", "substitutions": {"<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0.15000000000000002, "total_s": -4.25396203994751}, {"task_idx": 67, "task": {"type": "check", "queries": ["select * from customer, orders where c_custkey = o_custkey"]}, "temperature": 0.15000000000000002, "total_s": -1.9066483974456787}, {"task_idx": 66, "task": {"type": "generate", "task_id": "equi_join", "context": [], "template": "hash_join.py", "substitutions": {"<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0.2, "total_s": -5.606933832168579}, {"task_idx": 67, "task": {"type": "check", "queries": ["select * from customer, orders where c_custkey = o_custkey"]}, "temperature": 0.2, "total_s": -1.8874366283416748}, {"task_idx": 66, "task": {"type": "generate", "task_id": "equi_join", "context": [], "template": "hash_join.py", "substitutions": {"<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0.25, "total_s": -9.387672662734985}, {"task_idx": 67, "task": {"type": "check", "queries": ["select * from customer, orders where c_custkey = o_custkey"]}, "temperature": 0.25, "total_s": -2.060408115386963}, {"task_idx": 68, "task": {"type": "generate", "task_id": "sort", "context": [], "template": "sort.py", "substitutions": {"<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0, "total_s": -3.604522705078125}, {"task_idx": 69, "task": {"type": "check", "queries": ["select * from lineitem order by l_extendedprice DESC limit 5"]}, "temperature": 0, "total_s": -1.785163164138794}, {"task_idx": 68, "task": {"type": "generate", "task_id": "sort", "context": [], "template": "sort.py", "substitutions": {"<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0.05, "total_s": -3.428898811340332}, {"task_idx": 69, "task": {"type": "check", "queries": ["select * from lineitem order by l_extendedprice DESC limit 5"]}, "temperature": 0.05, "total_s": -1.7796332836151123}, {"task_idx": 68, "task": {"type": "generate", "task_id": "sort", "context": [], "template": "sort.py", "substitutions": {"<DataInstructions>": "is a list", "<OperatorInstructions>": "is a list"}}, "temperature": 0.1, "total_s": -4.41270637512207}, {"task_idx": 69, "task": {"type": "check", "queries": ["select * from lineitem order by l_extendedprice DESC limit 5"]}, "temperature": 0.1, "total_s": -6.589550733566284}]